function samples = DBN_sample(dbn)
    % The idea of this function is: we turn one of the units in the top
    % layer on and propagate its activation "generatively" to the bottom
    % layer. The hypothesis is that the generated features will look like
    % those generated by a CNN.
    
    layers = size(dbn.sizes, 2) - 1;
    
    % For each unit i in top layer
    %    Make i the only active unit in that layer
    %    For each layer h in the subsequent layers
    %        propagate the signal until the visible layer
    
    top_layer_size = size(dbn.rbm{layers}.c, 1);
    for i = 1 : top_layer_size
    % i.e., for each unit in the top layer
    
        % Make i the only active uni in that layer
        h = zeros([1, top_layer_size]);
        h(i) = 1;
        
        for l = layers : -1 : 1
            h = sigm(dbn.rbm{l}.b' + h * dbn.rbm{l}.W);
        end
        samples(:, i) = h;
    end
    
    view_samples(samples);
end

function view_samples(samples)
    samples = reshape(samples, 28, 28, 20);

    count = 1;
    for j = 1 : 20
        subplot(4,5,count);
        imshow(samples(:,:,j) - min(min(samples(:,:,j))));
        count = count + 1;
    end
end
